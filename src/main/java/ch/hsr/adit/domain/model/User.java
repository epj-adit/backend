package ch.hsr.adit.domain.model;
// Generated 23.03.2017 08:47:58 by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import lombok.Data;

/**
 * User generated by hbm2java
 */
@Data
@Entity
@Table(name = "user", schema = "public")
public class User implements DbEntity {

  private long id;
  private Role role;
  private String username;
  private String email;
  private String passwortHash;
  private boolean isPrivate;
  private boolean wantsNotification;
  private boolean isActive;
  private Date created;
  private Date updated;
  private Set userLogs = new HashSet(0);
  private Set messagesForSenderUserId = new HashSet(0);
  private Set messagesForRecipientUserId = new HashSet(0);
  private Set subscriptions = new HashSet(0);
  private Set advertisements = new HashSet(0);
  private String token;

  public User() {}

  public User(long id, Role role, String username, String email, String passwortHash,
      boolean isPrivate, boolean wantsNotification, boolean isActive, Date created) {
    this.id = id;
    this.role = role;
    this.username = username;
    this.email = email;
    this.passwortHash = passwortHash;
    this.isPrivate = isPrivate;
    this.wantsNotification = wantsNotification;
    this.isActive = isActive;
    this.created = created;
  }

  public User(long id, Role role, String username, String email, String passwortHash,
      boolean isPrivate, boolean wantsNotification, boolean isActive, Date created, Date updated,
      Set userLogs, Set messagesForSenderUserId, Set messagesForRecipientUserId, Set subscriptions,
      Set advertisements) {
    this.id = id;
    this.role = role;
    this.username = username;
    this.email = email;
    this.passwortHash = passwortHash;
    this.isPrivate = isPrivate;
    this.wantsNotification = wantsNotification;
    this.isActive = isActive;
    this.created = created;
    this.updated = updated;
    this.userLogs = userLogs;
    this.messagesForSenderUserId = messagesForSenderUserId;
    this.messagesForRecipientUserId = messagesForRecipientUserId;
    this.subscriptions = subscriptions;
    this.advertisements = advertisements;
  }

  @Id

  @Column(name = "id", unique = true, nullable = false)
  public long getId() {
    return this.id;
  }

  public void setId(long id) {
    this.id = id;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "role_id", nullable = false)
  public Role getRole() {
    return this.role;
  }

  public void setRole(Role role) {
    this.role = role;
  }

  @Column(name = "username", nullable = false)
  public String getUsername() {
    return this.username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  @Column(name = "email", nullable = false)
  public String getEmail() {
    return this.email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  @Column(name = "passwort_hash", nullable = false)
  public String getPasswortHash() {
    return this.passwortHash;
  }

  public void setPasswortHash(String passwortHash) {
    this.passwortHash = passwortHash;
  }

  @Column(name = "is_private", nullable = false)
  public boolean isIsPrivate() {
    return this.isPrivate;
  }

  public void setIsPrivate(boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  @Column(name = "wants_notification", nullable = false)
  public boolean isWantsNotification() {
    return this.wantsNotification;
  }

  public void setWantsNotification(boolean wantsNotification) {
    this.wantsNotification = wantsNotification;
  }

  @Column(name = "is_active", nullable = false)
  public boolean isIsActive() {
    return this.isActive;
  }

  public void setIsActive(boolean isActive) {
    this.isActive = isActive;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "created", nullable = false, length = 29)
  public Date getCreated() {
    return this.created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "updated", length = 29)
  public Date getUpdated() {
    return this.updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
  public Set getUserLogs() {
    return this.userLogs;
  }

  public void setUserLogs(Set userLogs) {
    this.userLogs = userLogs;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySenderUserId")
  public Set getMessagesForSenderUserId() {
    return this.messagesForSenderUserId;
  }

  public void setMessagesForSenderUserId(Set messagesForSenderUserId) {
    this.messagesForSenderUserId = messagesForSenderUserId;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByRecipientUserId")
  public Set getMessagesForRecipientUserId() {
    return this.messagesForRecipientUserId;
  }

  public void setMessagesForRecipientUserId(Set messagesForRecipientUserId) {
    this.messagesForRecipientUserId = messagesForRecipientUserId;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
  public Set getSubscriptions() {
    return this.subscriptions;
  }

  public void setSubscriptions(Set subscriptions) {
    this.subscriptions = subscriptions;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
  public Set getAdvertisements() {
    return this.advertisements;
  }

  public void setAdvertisements(Set advertisements) {
    this.advertisements = advertisements;
  }

}
